{"version":3,"sources":["Layouts/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useState","isActive","setActive","className","href","class","to","onClick","steps","id","message","trigger","user","end","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"qRAgIeA,MAvHf,WAGE,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,OAGE,gCAEE,+BACE,mBAAGC,UAAU,WAAb,SAAwB,oBAAIC,KAAK,IAAT,sBACxB,sBAAKC,MAAM,aAAX,UACE,uCACA,uCACA,uCACA,uCACA,4CAEF,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SAAc,6CAEhB,6BACE,cAAC,IAAD,CAAMA,GAAG,IAAT,SAAa,6CAEf,6BACE,cAAC,IAAD,CAAMA,GAAG,IAAT,SAAc,8CAEhB,6BACE,cAAC,IAAD,CAAMA,GAAG,IAAT,SAAc,4CAEhB,6BACE,cAAC,IAAD,CAAMA,GAAG,IAAT,SAAc,6CAIlB,sBAAKD,MAAM,eAAX,UAEE,cAAC,IAAD,CAAuBF,UAAU,WAAWI,QAAS,kBAAML,GAAWD,MACrEA,EACC,qBAAKE,UAAU,aAAf,SACE,cAAC,IAAD,CACEK,MAAO,CACL,CACEC,GAAI,OACJC,QAAS,iCACTC,QAAS,KAEX,CACEF,GAAI,IACJG,MAAM,EACND,QAAS,KAEX,CACEF,GAAI,IACJC,QAAS,wCACTC,QAAS,KAEX,CACEF,GAAI,IACJC,QAAS,sBACTC,QAAS,KAEX,CACEF,GAAI,IACJG,MAAM,EACND,QAAS,KAGX,CACEF,GAAI,IACJC,QAAS,oCACTC,QAAS,KAGX,CACEF,GAAI,IACJC,QAAS,+BACTC,QAAS,KAEX,CACEF,GAAI,IACJG,MAAM,EACND,QAAS,KAEX,CACEF,GAAI,IACJC,QAAS,4CACTC,QAAS,MAEX,CACEF,GAAI,KACJC,QAAS,uBACTC,QAAS,MAEX,CACEF,GAAI,KACJG,MAAM,EACND,QAAS,MAEX,CACEF,GAAI,KACJC,QAAS,mBACTC,QAAS,MAGX,CACEF,GAAI,KACJC,QAAS,gCACTG,KAAK,QAIJ,YC5GJC,MAVf,WACE,OACE,cAAC,IAAD,UACE,8BACE,cAAC,EAAD,SCKOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.26adeeb3.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport '../Styles/Navbar.css'\nimport Bot from '../images/Sparrow.png'\nimport Bot2 from '../images/favicon.png'\nimport { Link, useHistory } from 'react-router-dom'\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport ChatBot from 'react-simple-chatbot';\nimport '../Styles/Chatbot.css'\n\nfunction Navbar() {\n\n  //Button Onclick initiates the bot\n  const [isActive, setActive] = useState(false);\n  return (\n\n\n    <div >\n    {/*   //Navbar start */}\n      <ul>\n        <a className='logo-txt'><h1 href=\"/\">Maxeon</h1></a>\n        <div class=\"text-block\">\n          <h4>Where</h4>\n          <h4>words</h4>\n          <h4>fail,</h4>\n          <h4>Music</h4>\n          <h4>speaks.</h4>\n        </div>\n        <li>\n          <Link to='/' ><a>Products</a></Link>\n        </li>\n        <li>\n          <Link to='/'><a>Features</a></Link>\n        </li>\n        <li>\n          <Link to='/' ><a>Use Cases</a></Link>\n        </li>\n        <li>\n          <Link to='/' ><a>Pricing</a></Link>\n        </li>\n        <li>\n          <Link to='/' ><a>Login</a></Link>\n        </li>\n    {/* //Navbar end */}\n      </ul>\n      <div class=\"bottom-right\">\n       {/*  //bot Messages start */}\n        <ChatBubbleOutlineIcon className='chat-btn' onClick={() => setActive(!isActive)} />\n        {isActive ?\n          <div className=\"App-header\">\n            <ChatBot\n              steps={[\n                {\n                  id: 'name',\n                  message: 'Hi There, Can i Know your name',\n                  trigger: '2',\n                },\n                {\n                  id: '2',\n                  user: true,\n                  trigger: '3',\n                },\n                {\n                  id: '3',\n                  message: 'Hi nice metting you {previousValue}! ',\n                  trigger: '4',\n                },\n                {\n                  id: '4',\n                  message: ' Ask us Anything.  ',\n                  trigger: '5',\n                },\n                {\n                  id: '5',\n                  user: true,\n                  trigger: '6',\n                },\n\n                {\n                  id: '6',\n                  message: 'we have different types of music ',\n                  trigger: '7',\n                },\n\n                {\n                  id: '7',\n                  message: 'what is your favorite type? ',\n                  trigger: '8',\n                },\n                {\n                  id: '8',\n                  user: true,\n                  trigger: '9',\n                },\n                {\n                  id: '9',\n                  message: 'ok got it, let me suggest you some songs ',\n                  trigger: '10',\n                },\n                {\n                  id: '10',\n                  message: 'song 1, song2, song3',\n                  trigger: '11',\n                },\n                {\n                  id: '11',\n                  user: true,\n                  trigger: '12',\n                },\n                {\n                  id: '12',\n                  message: 'did you like it?',\n                  trigger: '13',\n                },\n\n                {\n                  id: '13',\n                  message: 'ok, do you want to subscribe?',\n                  end: true,\n                },\n              ]}\n            />\n          </div> : null}\n\n               {/* //bot Messages start */}\n      </div>\n    </div>\n  )\n}\nexport default Navbar\n","import React from 'react'\nimport Navbar from './Layouts/Navbar'\nimport { BrowserRouter } from \"react-router-dom\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Navbar />\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}